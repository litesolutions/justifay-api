// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.17.3
// source: user/usergroup_messages.proto

package user

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // required
}

func (x *UserGroupRequest) Reset() {
	*x = UserGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupRequest) ProtoMessage() {}

func (x *UserGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupRequest.ProtoReflect.Descriptor instead.
func (*UserGroupRequest) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{0}
}

func (x *UserGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UserGroupMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`    // required
	MemberId string `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //required
}

func (x *UserGroupMembershipRequest) Reset() {
	*x = UserGroupMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupMembershipRequest) ProtoMessage() {}

func (x *UserGroupMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupMembershipRequest.ProtoReflect.Descriptor instead.
func (*UserGroupMembershipRequest) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{1}
}

func (x *UserGroupMembershipRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UserGroupMembershipRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type UserGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 string              `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`                                      // required
	DisplayName        string              `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"` // required
	Description        string              `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ShortBio           string              `protobuf:"bytes,4,opt,name=short_bio,json=shortBio,proto3" json:"short_bio,omitempty"`
	Avatar             string              `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"` // required
	Banner             string              `protobuf:"bytes,6,opt,name=banner,proto3" json:"banner,omitempty"`
	OwnerId            string              `protobuf:"bytes,7,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`       // required
	GroupType          string              `protobuf:"bytes,8,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"` // UUID required
	Followers          []*User             `protobuf:"bytes,9,rep,name=followers,proto3" json:"followers,omitempty"`
	Members            []*UserGroup        `protobuf:"bytes,10,rep,name=members,proto3" json:"members,omitempty"`
	MemberOfGroups     []*UserGroup        `protobuf:"bytes,11,rep,name=memberOfGroups,proto3" json:"memberOfGroups,omitempty"`
	Links              []*Link             `protobuf:"bytes,12,rep,name=links,proto3" json:"links,omitempty"`
	Tags               []*Tag              `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty"`
	Address            *StreetAddress      `protobuf:"bytes,14,opt,name=address,proto3" json:"address,omitempty"`
	Privacy            *Privacy            `protobuf:"bytes,15,opt,name=privacy,proto3" json:"privacy,omitempty"`
	RecommendedArtists []*RelatedUserGroup `protobuf:"bytes,16,rep,name=recommended_artists,json=recommendedArtists,proto3" json:"recommended_artists,omitempty"`
	// map<string, string> publisher = 17;
	// map<string, string> pro = 18;
	GroupEmail string `protobuf:"bytes,17,opt,name=group_email,json=groupEmail,proto3" json:"group_email,omitempty"`
}

func (x *UserGroup) Reset() {
	*x = UserGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroup) ProtoMessage() {}

func (x *UserGroup) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroup.ProtoReflect.Descriptor instead.
func (*UserGroup) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{2}
}

func (x *UserGroup) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UserGroup) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserGroup) GetShortBio() string {
	if x != nil {
		return x.ShortBio
	}
	return ""
}

func (x *UserGroup) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserGroup) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *UserGroup) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *UserGroup) GetGroupType() string {
	if x != nil {
		return x.GroupType
	}
	return ""
}

func (x *UserGroup) GetFollowers() []*User {
	if x != nil {
		return x.Followers
	}
	return nil
}

func (x *UserGroup) GetMembers() []*UserGroup {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *UserGroup) GetMemberOfGroups() []*UserGroup {
	if x != nil {
		return x.MemberOfGroups
	}
	return nil
}

func (x *UserGroup) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *UserGroup) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UserGroup) GetAddress() *StreetAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *UserGroup) GetPrivacy() *Privacy {
	if x != nil {
		return x.Privacy
	}
	return nil
}

func (x *UserGroup) GetRecommendedArtists() []*RelatedUserGroup {
	if x != nil {
		return x.RecommendedArtists
	}
	return nil
}

func (x *UserGroup) GetGroupEmail() string {
	if x != nil {
		return x.GroupEmail
	}
	return ""
}

type UserGroupCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // UUID required
	DisplayName string   `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"` // required
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                    // optional
	ShortBio    string   `protobuf:"bytes,4,opt,name=short_bio,json=shortBio,proto3" json:"short_bio,omitempty"`          // optional
	Avatar      string   `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`                              // UUID
	Banner      string   `protobuf:"bytes,6,opt,name=banner,proto3" json:"banner,omitempty"`                              // UUID
	GroupType   string   `protobuf:"bytes,8,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`       // required UUID
	Tags        []string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`                                  // optional UUIDs
	GroupEmail  string   `protobuf:"bytes,10,opt,name=group_email,json=groupEmail,proto3" json:"group_email,omitempty"`   // optional
	Links       []string `protobuf:"bytes,11,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *UserGroupCreateRequest) Reset() {
	*x = UserGroupCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupCreateRequest) ProtoMessage() {}

func (x *UserGroupCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupCreateRequest.ProtoReflect.Descriptor instead.
func (*UserGroupCreateRequest) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{3}
}

func (x *UserGroupCreateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserGroupCreateRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserGroupCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserGroupCreateRequest) GetShortBio() string {
	if x != nil {
		return x.ShortBio
	}
	return ""
}

func (x *UserGroupCreateRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserGroupCreateRequest) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *UserGroupCreateRequest) GetGroupType() string {
	if x != nil {
		return x.GroupType
	}
	return ""
}

func (x *UserGroupCreateRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UserGroupCreateRequest) GetGroupEmail() string {
	if x != nil {
		return x.GroupEmail
	}
	return ""
}

func (x *UserGroupCreateRequest) GetLinks() []string {
	if x != nil {
		return x.Links
	}
	return nil
}

type UserGroupUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // required
	DisplayName *string  `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3,oneof" json:"display_name,omitempty"`
	Description *string  `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	ShortBio    *string  `protobuf:"bytes,4,opt,name=short_bio,json=shortBio,proto3,oneof" json:"short_bio,omitempty"`
	Avatar      *string  `protobuf:"bytes,5,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Banner      *string  `protobuf:"bytes,6,opt,name=banner,proto3,oneof" json:"banner,omitempty"`
	GroupType   *string  `protobuf:"bytes,7,opt,name=group_type,json=groupType,proto3,oneof" json:"group_type,omitempty"`
	GroupEmail  *string  `protobuf:"bytes,9,opt,name=group_email,json=groupEmail,proto3,oneof" json:"group_email,omitempty"`
	OwnerId     *string  `protobuf:"bytes,10,opt,name=owner_id,json=ownerId,proto3,oneof" json:"owner_id,omitempty"`
	Links       []string `protobuf:"bytes,11,rep,name=links,proto3" json:"links,omitempty"`
	Tags        []string `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *UserGroupUpdateRequest) Reset() {
	*x = UserGroupUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupUpdateRequest) ProtoMessage() {}

func (x *UserGroupUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupUpdateRequest.ProtoReflect.Descriptor instead.
func (*UserGroupUpdateRequest) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{4}
}

func (x *UserGroupUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserGroupUpdateRequest) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *UserGroupUpdateRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UserGroupUpdateRequest) GetShortBio() string {
	if x != nil && x.ShortBio != nil {
		return *x.ShortBio
	}
	return ""
}

func (x *UserGroupUpdateRequest) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *UserGroupUpdateRequest) GetBanner() string {
	if x != nil && x.Banner != nil {
		return *x.Banner
	}
	return ""
}

func (x *UserGroupUpdateRequest) GetGroupType() string {
	if x != nil && x.GroupType != nil {
		return *x.GroupType
	}
	return ""
}

func (x *UserGroupUpdateRequest) GetGroupEmail() string {
	if x != nil && x.GroupEmail != nil {
		return *x.GroupEmail
	}
	return ""
}

func (x *UserGroupUpdateRequest) GetOwnerId() string {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return ""
}

func (x *UserGroupUpdateRequest) GetLinks() []string {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *UserGroupUpdateRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UserGroupPrivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"` // required
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ShortBio    string `protobuf:"bytes,4,opt,name=short_bio,json=shortBio,proto3" json:"short_bio,omitempty"`
	Avatar      string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"` // required
	Banner      string `protobuf:"bytes,6,opt,name=banner,proto3" json:"banner,omitempty"`
	OwnerId     string `protobuf:"bytes,7,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`       // required
	GroupType   string `protobuf:"bytes,8,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"` // required
	// repeated string followers = 9;
	// repeated string members = 10;
	// repeated string memberOfGroups = 11;
	// repeated string links = 12;
	// repeated string tags = 13;
	//  StreetAddress address = 13;
	// Privacy privacy = 14;
	//repeated RelatedUserGroup recommended_artists = 15;
	//map<string, string> publisher = 16;
	//map<string, string> pro = 17;
	GroupEmail string `protobuf:"bytes,9,opt,name=group_email,json=groupEmail,proto3" json:"group_email,omitempty"`
	CreatedAt  string `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  string `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *UserGroupPrivateResponse) Reset() {
	*x = UserGroupPrivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupPrivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupPrivateResponse) ProtoMessage() {}

func (x *UserGroupPrivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupPrivateResponse.ProtoReflect.Descriptor instead.
func (*UserGroupPrivateResponse) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{5}
}

func (x *UserGroupPrivateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserGroupPrivateResponse) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserGroupPrivateResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserGroupPrivateResponse) GetShortBio() string {
	if x != nil {
		return x.ShortBio
	}
	return ""
}

func (x *UserGroupPrivateResponse) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserGroupPrivateResponse) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *UserGroupPrivateResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *UserGroupPrivateResponse) GetGroupType() string {
	if x != nil {
		return x.GroupType
	}
	return ""
}

func (x *UserGroupPrivateResponse) GetGroupEmail() string {
	if x != nil {
		return x.GroupEmail
	}
	return ""
}

func (x *UserGroupPrivateResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UserGroupPrivateResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type UserGroupListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usergroup []*UserGroupPrivateResponse `protobuf:"bytes,1,rep,name=usergroup,proto3" json:"usergroup,omitempty"`
}

func (x *UserGroupListResponse) Reset() {
	*x = UserGroupListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupListResponse) ProtoMessage() {}

func (x *UserGroupListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupListResponse.ProtoReflect.Descriptor instead.
func (*UserGroupListResponse) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{6}
}

func (x *UserGroupListResponse) GetUsergroup() []*UserGroupPrivateResponse {
	if x != nil {
		return x.Usergroup
	}
	return nil
}

type UserGroupPublicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName    string   `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"` // required
	Description    string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ShortBio       string   `protobuf:"bytes,4,opt,name=short_bio,json=shortBio,proto3" json:"short_bio,omitempty"`
	Avatar         string   `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"` // required
	Banner         string   `protobuf:"bytes,6,opt,name=banner,proto3" json:"banner,omitempty"`
	GroupType      string   `protobuf:"bytes,8,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"` // required
	Followers      []string `protobuf:"bytes,9,rep,name=followers,proto3" json:"followers,omitempty"`
	Members        []string `protobuf:"bytes,10,rep,name=members,proto3" json:"members,omitempty"`
	MemberOfGroups []string `protobuf:"bytes,11,rep,name=memberOfGroups,proto3" json:"memberOfGroups,omitempty"`
	Links          []*Link  `protobuf:"bytes,12,rep,name=links,proto3" json:"links,omitempty"`
	Tags           []string `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty"`
	// repeated RelatedUserGroup recommended_artists = 17;
	// map<string, string> publisher = 21;
	// map<string, string> pro = 22;
	GroupEmail string `protobuf:"bytes,23,opt,name=group_email,json=groupEmail,proto3" json:"group_email,omitempty"`
}

func (x *UserGroupPublicResponse) Reset() {
	*x = UserGroupPublicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupPublicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupPublicResponse) ProtoMessage() {}

func (x *UserGroupPublicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupPublicResponse.ProtoReflect.Descriptor instead.
func (*UserGroupPublicResponse) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{7}
}

func (x *UserGroupPublicResponse) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserGroupPublicResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserGroupPublicResponse) GetShortBio() string {
	if x != nil {
		return x.ShortBio
	}
	return ""
}

func (x *UserGroupPublicResponse) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserGroupPublicResponse) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *UserGroupPublicResponse) GetGroupType() string {
	if x != nil {
		return x.GroupType
	}
	return ""
}

func (x *UserGroupPublicResponse) GetFollowers() []string {
	if x != nil {
		return x.Followers
	}
	return nil
}

func (x *UserGroupPublicResponse) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *UserGroupPublicResponse) GetMemberOfGroups() []string {
	if x != nil {
		return x.MemberOfGroups
	}
	return nil
}

func (x *UserGroupPublicResponse) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *UserGroupPublicResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UserGroupPublicResponse) GetGroupEmail() string {
	if x != nil {
		return x.GroupEmail
	}
	return ""
}

type UserGroupRecommended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroupId   string `protobuf:"bytes,1,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,omitempty"`
	RecommendedId string `protobuf:"bytes,2,opt,name=recommended_id,json=recommendedId,proto3" json:"recommended_id,omitempty"`
}

func (x *UserGroupRecommended) Reset() {
	*x = UserGroupRecommended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupRecommended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupRecommended) ProtoMessage() {}

func (x *UserGroupRecommended) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupRecommended.ProtoReflect.Descriptor instead.
func (*UserGroupRecommended) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{8}
}

func (x *UserGroupRecommended) GetUserGroupId() string {
	if x != nil {
		return x.UserGroupId
	}
	return ""
}

func (x *UserGroupRecommended) GetRecommendedId() string {
	if x != nil {
		return x.RecommendedId
	}
	return ""
}

type UserGroupMembers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroupId string   `protobuf:"bytes,1,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,omitempty"`
	Members     []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *UserGroupMembers) Reset() {
	*x = UserGroupMembers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupMembers) ProtoMessage() {}

func (x *UserGroupMembers) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupMembers.ProtoReflect.Descriptor instead.
func (*UserGroupMembers) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{9}
}

func (x *UserGroupMembers) GetUserGroupId() string {
	if x != nil {
		return x.UserGroupId
	}
	return ""
}

func (x *UserGroupMembers) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{10}
}

func (x *Group) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GroupTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []*Group `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
}

func (x *GroupTypes) Reset() {
	*x = GroupTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupTypes) ProtoMessage() {}

func (x *GroupTypes) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupTypes.ProtoReflect.Descriptor instead.
func (*GroupTypes) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{11}
}

func (x *GroupTypes) GetTypes() []*Group {
	if x != nil {
		return x.Types
	}
	return nil
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Platform     string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	GroupType    string `protobuf:"bytes,3,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`
	Uri          string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	PersonalData bool   `protobuf:"varint,5,opt,name=personal_data,json=personalData,proto3" json:"personal_data,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{12}
}

func (x *Link) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Link) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Link) GetGroupType() string {
	if x != nil {
		return x.GroupType
	}
	return ""
}

func (x *Link) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Link) GetPersonalData() bool {
	if x != nil {
		return x.PersonalData
	}
	return false
}

type Privacy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Private          bool   `protobuf:"varint,2,opt,name=private,proto3" json:"private,omitempty"`
	OwnedTracks      bool   `protobuf:"varint,3,opt,name=owned_tracks,json=ownedTracks,proto3" json:"owned_tracks,omitempty"`
	SupportedArtists bool   `protobuf:"varint,4,opt,name=supported_artists,json=supportedArtists,proto3" json:"supported_artists,omitempty"`
}

func (x *Privacy) Reset() {
	*x = Privacy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Privacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Privacy) ProtoMessage() {}

func (x *Privacy) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Privacy.ProtoReflect.Descriptor instead.
func (*Privacy) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{13}
}

func (x *Privacy) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Privacy) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *Privacy) GetOwnedTracks() bool {
	if x != nil {
		return x.OwnedTracks
	}
	return false
}

func (x *Privacy) GetSupportedArtists() bool {
	if x != nil {
		return x.SupportedArtists
	}
	return false
}

type GroupedUserGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*UserGroupPublicResponse `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GroupedUserGroups) Reset() {
	*x = GroupedUserGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_usergroup_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupedUserGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupedUserGroups) ProtoMessage() {}

func (x *GroupedUserGroups) ProtoReflect() protoreflect.Message {
	mi := &file_user_usergroup_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupedUserGroups.ProtoReflect.Descriptor instead.
func (*GroupedUserGroups) Descriptor() ([]byte, []int) {
	return file_user_usergroup_messages_proto_rawDescGZIP(), []int{14}
}

func (x *GroupedUserGroups) GetGroups() []*UserGroupPublicResponse {
	if x != nil {
		return x.Groups
	}
	return nil
}

var File_user_usergroup_messages_proto protoreflect.FileDescriptor

var file_user_usergroup_messages_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x1a, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xf8, 0x04, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x69, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x37, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x12, 0x47, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xa4, 0x02, 0x0a, 0x16,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x22, 0xd8, 0x03, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x69, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0xd5, 0x02,
	0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x55, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x81, 0x03, 0x0a,
	0x17, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x61, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x4d, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x83, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6f, 0x77,
	0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x22, 0x4a, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x63, 0x6f, 0x6f, 0x70, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_usergroup_messages_proto_rawDescOnce sync.Once
	file_user_usergroup_messages_proto_rawDescData = file_user_usergroup_messages_proto_rawDesc
)

func file_user_usergroup_messages_proto_rawDescGZIP() []byte {
	file_user_usergroup_messages_proto_rawDescOnce.Do(func() {
		file_user_usergroup_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_usergroup_messages_proto_rawDescData)
	})
	return file_user_usergroup_messages_proto_rawDescData
}

var file_user_usergroup_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_user_usergroup_messages_proto_goTypes = []interface{}{
	(*UserGroupRequest)(nil),           // 0: user.UserGroupRequest
	(*UserGroupMembershipRequest)(nil), // 1: user.UserGroupMembershipRequest
	(*UserGroup)(nil),                  // 2: user.UserGroup
	(*UserGroupCreateRequest)(nil),     // 3: user.UserGroupCreateRequest
	(*UserGroupUpdateRequest)(nil),     // 4: user.UserGroupUpdateRequest
	(*UserGroupPrivateResponse)(nil),   // 5: user.UserGroupPrivateResponse
	(*UserGroupListResponse)(nil),      // 6: user.UserGroupListResponse
	(*UserGroupPublicResponse)(nil),    // 7: user.UserGroupPublicResponse
	(*UserGroupRecommended)(nil),       // 8: user.UserGroupRecommended
	(*UserGroupMembers)(nil),           // 9: user.UserGroupMembers
	(*Group)(nil),                      // 10: user.Group
	(*GroupTypes)(nil),                 // 11: user.GroupTypes
	(*Link)(nil),                       // 12: user.Link
	(*Privacy)(nil),                    // 13: user.Privacy
	(*GroupedUserGroups)(nil),          // 14: user.GroupedUserGroups
	(*User)(nil),                       // 15: user.User
	(*Tag)(nil),                        // 16: user.Tag
	(*StreetAddress)(nil),              // 17: user.StreetAddress
	(*RelatedUserGroup)(nil),           // 18: user.RelatedUserGroup
}
var file_user_usergroup_messages_proto_depIdxs = []int32{
	15, // 0: user.UserGroup.followers:type_name -> user.User
	2,  // 1: user.UserGroup.members:type_name -> user.UserGroup
	2,  // 2: user.UserGroup.memberOfGroups:type_name -> user.UserGroup
	12, // 3: user.UserGroup.links:type_name -> user.Link
	16, // 4: user.UserGroup.tags:type_name -> user.Tag
	17, // 5: user.UserGroup.address:type_name -> user.StreetAddress
	13, // 6: user.UserGroup.privacy:type_name -> user.Privacy
	18, // 7: user.UserGroup.recommended_artists:type_name -> user.RelatedUserGroup
	5,  // 8: user.UserGroupListResponse.usergroup:type_name -> user.UserGroupPrivateResponse
	12, // 9: user.UserGroupPublicResponse.links:type_name -> user.Link
	10, // 10: user.GroupTypes.types:type_name -> user.Group
	7,  // 11: user.GroupedUserGroups.groups:type_name -> user.UserGroupPublicResponse
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_user_usergroup_messages_proto_init() }
func file_user_usergroup_messages_proto_init() {
	if File_user_usergroup_messages_proto != nil {
		return
	}
	file_user_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_user_usergroup_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupPrivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupPublicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupRecommended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupMembers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Privacy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_usergroup_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupedUserGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_user_usergroup_messages_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_usergroup_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_usergroup_messages_proto_goTypes,
		DependencyIndexes: file_user_usergroup_messages_proto_depIdxs,
		MessageInfos:      file_user_usergroup_messages_proto_msgTypes,
	}.Build()
	File_user_usergroup_messages_proto = out.File
	file_user_usergroup_messages_proto_rawDesc = nil
	file_user_usergroup_messages_proto_goTypes = nil
	file_user_usergroup_messages_proto_depIdxs = nil
}
